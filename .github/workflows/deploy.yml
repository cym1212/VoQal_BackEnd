name: Deploy to EC2 with Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Restore configuration files from GitHub Secrets
        run: |
            echo "${{ secrets.APPLICATION_DATABASE_YML }}" > src/main/resources/application-database-prod.yml
            echo "${{ secrets.APPLICATION_FIREBASE_YML }}" > src/main/resources/application-firebase.yml
            echo "${{ secrets.APPLICATION_S3_YML }}" > src/main/resources/application-s3.yml
            echo "${{ secrets.APPLICATION_SECRET_YML }}" > src/main/resources/application-secret.yml
            echo "${{ secrets.APPLICATION_WEBHOOK_DISCORD_YML }}" > src/main/resources/application-webhook-discord.yml
            echo "${{ secrets.VOQAL_FIREBASE_ADMIN_SDK_JSON }}" | base64 -d > src/main/resources/voqal-firebase-admin-sdk.json


      - name: Build with Gradle
        run: ./gradlew build -x test

          # Docker Hub 로그인
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t cym1212/voqal .

      # Docker Hub에 이미지 푸시
      - name: Push Docker image to Docker Hub
        run: docker push cym1212/voqal


      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-northeast-2'

        #EC2 서버에 ssh 포트 허용을 위한 ip를 얻은 후 인바운드 규칙에 추가
      - name: Add GitHub Actions IP
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32  

      # EC2 서버에 SSH 연결하여 Docker Hub에서 이미지 가져오기 및 컨테이너 실행
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: '22'
          debug: true
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull cym1212/voqal
            docker stop spring-container || true
            docker rm spring-container || true
            docker run -d --name spring-container -p 8080:8080 \
              -e DB_URL=${{ secrets.DB_URL }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                cym1212/voqal

#         추가했던 인바운드 규칙을 제거
      - name: Remove GitHub Actions IP
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32